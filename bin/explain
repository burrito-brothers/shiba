#!/usr/bin/env ruby

require 'bundler/setup'
require 'shiba'
require 'shiba/analyzer'
require 'shiba/table_stats'
require 'shiba/configure'
require 'shiba/output'

require 'optionparser'

options = {}

parser = Shiba::Configure.make_options_parser(options)
parser.banner = "Run a list of queries through shiba's analyzer."
parser.parse!

["database", "username"].each do |opt|
  if !options[opt]
    $stderr.puts "Required: #{opt}"
    $stderr.puts parser.banner
    exit 1
  end
end

file = options.delete("file")
file = File.open(file, "r") if file

output = options.delete("explain")
output = File.open(output, 'w') if output

Shiba.configure(options)

schema_stats_fname = options["stats"]

if schema_stats_fname && !File.exist?(schema_stats_fname)
  $stderr.puts "No such file: #{schema_stats_fname}"
  exit 1
end

file = $stdin if file.nil?
if output && options["verbose"]
  $stderr.puts "Analyzing SQL to '#{options["explain"]}'..."
end
output = $stdout if output.nil?

table_stats = Shiba::TableStats.new(Shiba.index_config, Shiba.connection, {})
queries = Shiba::Analyzer.analyze(file, output, table_stats, options)

problems = queries.select { |q| q[:cost] && q[:cost] > 100 }

if problems.any?
  puts "#{problems.size} problematic queries detected"
  page = Shiba::Output.new(queries, { 'output' => options['output'] }).make_web!
  if !File.exist?(page)
    $stderr.puts("Failed to generate #{page}")
    exit 1
  end

  puts "Report available at #{page}"
  exit 3
end
