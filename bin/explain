#!/usr/bin/env ruby

require 'bundler/setup'
require 'shiba'
require 'shiba/analyzer'
require 'shiba/index'
require 'shiba/configure'
require 'shiba/output'

require 'optionparser'

options = {}

parser = Shiba::Configure.make_options_parser(options)
parser.banner = "Run a list of queries through shiba's analyzer."
parser.parse!

option_path = Shiba::Configure.mysql_config_path

if option_path
  puts "Found config at #{option_path}" if options["verbose"]
  options['default_file'] ||= option_path
end

if options['default_file'] && ! options['default_group']
  options['default_group'] = 'client'
end

option_file = if options['default_file'] && File.exist?(options['default_file'])
   File.read(options['default_file'])
else
  ""
end

def require_option(parser, name)
  $stderr.puts "Required: #{name}"
  $stderr.puts parser.banner
  exit 1
end

if !options["username"] && !option_file.include?('user')
  require_option(parser, 'username')
end

if !options["database"] && !option_file.include?('database')
  require_option(parser, 'database')
end

file = options.delete("file")
file = File.open(file, "r") if file

output = options.delete("explain")
output = File.open(output, 'w') if output

Shiba.configure(options)

schema_stats_fname = options["stats"]

if schema_stats_fname && !File.exist?(schema_stats_fname)
  $stderr.puts "No such file: #{schema_stats_fname}"
  exit 1
end

if schema_stats_fname
  schema_stats = Shiba::Index.parse(schema_stats_fname)

  local_db_stats = Shiba::Index.query(Shiba.connection)
  Shiba::Index.fuzz!(local_db_stats)
  local_db_stats.each do |table, values|
    schema_stats[table] = values unless schema_stats[table]
  end
else
  schema_stats = Shiba::Index.query(Shiba.connection)

  if Shiba::Index.insufficient_stats?(schema_stats)
    $stderr.puts "WARN: insufficient stats available in the #{options["database"]} database, guessing at numbers."
    $stderr.puts "To get better analysis please specify an index statistics file."
    puts ""
    sleep 0.5
    Shiba::Index.fuzz!(schema_stats)
  end
end



file = $stdin if file.nil?
output = $stdout if output.nil?

if options["verbose"]
  $stderr.puts "Reading queries from '#{file.inspect}'..."
  $stderr.puts "Analyzing SQL to '#{output.inspect}'..."
end

queries = Shiba::Analyzer.analyze(file, output, schema_stats, options)

problems = queries.select { |q| q[:cost] && q[:cost] > 100 }

if problems.any?
  $stderr.puts "#{problems.size} problematic queries detected"

  # Only generate web page if we're writing to a file.
  # Should probably stop generating page in this script.
  if output == $stdout
    exit 3
  end

  page = Shiba::Output.new(queries, { 'output' => options['output'] }).make_web!
  if !File.exist?(page)
    $stderr.puts("Failed to generate #{page}")
    exit 1
  end

  $stderr.puts "Report available at #{page}"
  exit 3
end